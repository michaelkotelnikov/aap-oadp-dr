kind: CronJob
apiVersion: batch/v1
metadata:
  name: aap-restore
  namespace: openshift-adp
spec:
  schedule: '30 * * * *'
  concurrencyPolicy: Allow
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: restore-schedule
              image: bitnami/kubectl
              command:
              - "/bin/sh"
              - "-c"
              - |
                kubectl delete automationcontroller aap -n aap
                kubectl delete pvc --all -n aap

                RESTORE_NAME="aap-restore"
                kubectl delete restore $RESTORE_NAME

                sleep 40

                NEWEST_BACKUP_NAME=$(kubectl get backups -n openshift-adp --sort-by=.metadata.creationTimestamp -o json | jq -r '.items[-1].metadata.name')

                cat <<EOF | kubectl apply -f -
                apiVersion: velero.io/v1
                kind: Restore
                metadata:
                  name: $RESTORE_NAME
                  namespace: openshift-adp
                spec:
                  backupName: $NEWEST_BACKUP_NAME
                  excludedResources:
                  - operatorgroups.operators.coreos.com
                  - subscriptions.operators.coreos.com
                  - deployments
                  - statefulsets
                  - replicasets
                  - automationcontrollerbackups.automationcontroller.ansible.com
                  - automationcontrollerrestores.automationcontroller.ansible.com
                  existingResourcePolicy: update
                  includedNamespaces:
                    - aap
                  itemOperationTimeout: 1h0m0s
                  restorePVs: true
                EOF

                sleep 480

                kubectl patch statefulset aap-postgres-13 --type='json' -p='[{"op": "add", "path": "/spec/template/spec/securityContext/runAsUser", "value": 1000710000}]' -n aap

                sleep 5

                kubectl delete pods --all -n aap

                sleep 100
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Never
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          serviceAccountName: restore-sa
          serviceAccount: restore-sa
          securityContext: {}
          schedulerName: default-scheduler
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
